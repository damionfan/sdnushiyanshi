/*
 * 	对于寄存器的使用暂时还是属于模糊状态的
 * 	此文件用于复习学习共享内存、全局内存等
 * */


#include <stdio.h>
#include <time.h>

#define u32 unsigned int
#define NUM_ELEM 8

__host__ void cpu_sort(u32 * const data,
		const u32 num_elements){
	static u32 cpu_tmp_0[NUM_ELEM];
	static u32 cpu_tmp_1[NUM_ELEM];

	for(u32 bit = 0; bit<32;bit++){
		u32 base_cnt_0 = 0;
		u32 base_cnt_1 = 0;

		for(u32 i=0;i<num_elements;i++){
			const u32 d = data[i];
			const u32 bit_mask = (1<<bit);

			if((d & bit_mask) > 0){
				cpu_tmp_1[base_cnt_1]=d;
				base_cnt_1++;
			} else {
				cpu_tmp_0[base_cnt_0] = d;
				base_cnt_0++;
			}
		}
		//
		for(u32 i=0; i<base_cnt_0;i++){
			data[i] = cpu_tmp_0[i];
		}
		for(u32 i=0; i<base_cnt_1;i++){
			data[base_cnt_0+i] = cpu_tmp_1[i];
		}

	}
}


__device__ void radix_sort(u32 *const sort_tmp,
		const u32 num_lists,
		const u32 num_elements,
		const u32 tid,
		u32 * const sort_temp_0,
		u32 * const sort_temp_1){
	for(u32 bit=0;bit<32;bit++){
		u32 base_cnt_0 = 0;
		u32 base_cnt_1 = 0;

		for(u32 i =0; i<num_elements;i++){
			const u32 elem = sort_tmp[i+tid];
			const u32 bit_mask = (1<<bit);

			if((elem & bit_mask)>0){
				sort_tmp_1[base_cnt_1]=elem;
				bvase_cnt_1+=num_list;
			}else{
				sort_tmp_0[base_cnt_0]=elem;
				base_cnt_0+=num_list;
			}
		}
	}

}
int main()
{
	u32 list[NUM_ELEM]={122,10,2,1,2,22,12,9};
	clock_t start,stop;
	float costtime;
	start = clock();
	cpu_sort(list,5);
	stop=clock();
	costtime = (float)(stop-start)/CLOCKS_PER_SEC;
	printf("花费时间为：%f\n",costtime);
	for(u32 i=0;i<5;i++)
		printf("%d\n",list[i]);
	return 0;
}
